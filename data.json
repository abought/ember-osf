{
    "project": {
        "name": "Ember OSF",
        "description": "Ember components for interacting with the Open Science Framework",
        "version": "0.0.1",
        "url": "https://github.com/CenterForOpenScience/ember-osf",
        "logo": "https://cos.io/static/img/icons/cos_wide.png"
    },
    "files": {
        "addon/adapters/osf-adapter.js": {
            "name": "addon/adapters/osf-adapter.js",
            "modules": {
                "adapters": 1
            },
            "classes": {
                "OsfAdapter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/authenticators/osf-token.js": {
            "name": "addon/authenticators/osf-token.js",
            "modules": {
                "authenticators": 1
            },
            "classes": {
                "OsfTokenAuthenticator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/authorizers/osf-token.js": {
            "name": "addon/authorizers/osf-token.js",
            "modules": {
                "authorizers": 1
            },
            "classes": {
                "OsfTokenAuthorizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/comment-detail/component.js": {
            "name": "addon/components/comment-detail/component.js",
            "modules": {
                "components": 1
            },
            "classes": {
                "comment-detail": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/comment-form/component.js": {
            "name": "addon/components/comment-form/component.js",
            "modules": {},
            "classes": {
                "comment-form": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/comment-pane/component.js": {
            "name": "addon/components/comment-pane/component.js",
            "modules": {},
            "classes": {
                "comment-pane": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/dropzone-widget/component.js": {
            "name": "addon/components/dropzone-widget/component.js",
            "modules": {},
            "classes": {
                "dropzone-widget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-browser/component.js": {
            "name": "addon/components/file-browser/component.js",
            "modules": {},
            "classes": {
                "file-browser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-browser-icon/component.js": {
            "name": "addon/components/file-browser-icon/component.js",
            "modules": {},
            "classes": {
                "file-browser-icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-browser-item/component.js": {
            "name": "addon/components/file-browser-item/component.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-chooser/component.js": {
            "name": "addon/components/file-chooser/component.js",
            "modules": {},
            "classes": {
                "file-chooser component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-renderer/component.js": {
            "name": "addon/components/file-renderer/component.js",
            "modules": {},
            "classes": {
                "file-renderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-version/component.js": {
            "name": "addon/components/file-version/component.js",
            "modules": {},
            "classes": {
                "file-version": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/file-widget/component.js": {
            "name": "addon/components/file-widget/component.js",
            "modules": {},
            "classes": {
                "file-widget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/oauth-popup/component.js": {
            "name": "addon/components/oauth-popup/component.js",
            "modules": {},
            "classes": {
                "oauth-popup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/osf-copyright/component.js": {
            "name": "addon/components/osf-copyright/component.js",
            "modules": {},
            "classes": {
                "osf-copyright": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/osf-footer/component.js": {
            "name": "addon/components/osf-footer/component.js",
            "modules": {},
            "classes": {
                "osf-footer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/osf-mode-footer/component.js": {
            "name": "addon/components/osf-mode-footer/component.js",
            "modules": {},
            "classes": {
                "osf-mode-footer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/osf-navbar/component.js": {
            "name": "addon/components/osf-navbar/component.js",
            "modules": {},
            "classes": {
                "osf-navbar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/pagination-control/component.js": {
            "name": "addon/components/pagination-control/component.js",
            "modules": {},
            "classes": {
                "pagination-control": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/search-dropdown/component.js": {
            "name": "addon/components/search-dropdown/component.js",
            "modules": {},
            "classes": {
                "search-dropdown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/sign-up/component.js": {
            "name": "addon/components/sign-up/component.js",
            "modules": {},
            "classes": {
                "sign-up": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/components/tags-widget/component.js": {
            "name": "addon/components/tags-widget/component.js",
            "modules": {},
            "classes": {
                "tags-widget": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/helpers/elem-id.js": {
            "name": "addon/helpers/elem-id.js",
            "modules": {
                "helpers": 1
            },
            "classes": {
                "elem-id": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/commentable.js": {
            "name": "addon/mixins/commentable.js",
            "modules": {
                "mixins": 1
            },
            "classes": {
                "CommentableMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/fetch-all-route.js": {
            "name": "addon/mixins/fetch-all-route.js",
            "modules": {},
            "classes": {
                "FetchAllRouteMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/file-cache-bypass.js": {
            "name": "addon/mixins/file-cache-bypass.js",
            "modules": {},
            "classes": {
                "FileCacheBypassMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/file-item.js": {
            "name": "addon/mixins/file-item.js",
            "modules": {},
            "classes": {
                "FileItemMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/infinity-custom.js": {
            "name": "addon/mixins/infinity-custom.js",
            "modules": {},
            "classes": {
                "InfinityCustomMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/node-actions.js": {
            "name": "addon/mixins/node-actions.js",
            "modules": {},
            "classes": {
                "NodeActionsMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/osf-login-controller.js": {
            "name": "addon/mixins/osf-login-controller.js",
            "modules": {},
            "classes": {
                "OsfLoginControllerMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/osf-login-route.js": {
            "name": "addon/mixins/osf-login-route.js",
            "modules": {},
            "classes": {
                "OsfLoginRouteMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/paginated-controller.js": {
            "name": "addon/mixins/paginated-controller.js",
            "modules": {},
            "classes": {
                "PaginatedControllerMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/paginated-route.js": {
            "name": "addon/mixins/paginated-route.js",
            "modules": {},
            "classes": {
                "PaginatedRouteMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/registration-actions.js": {
            "name": "addon/mixins/registration-actions.js",
            "modules": {},
            "classes": {
                "RegistrationActionsMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/taggable-mixin.js": {
            "name": "addon/mixins/taggable-mixin.js",
            "modules": {},
            "classes": {
                "TaggableMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/collection.js": {
            "name": "addon/models/collection.js",
            "modules": {
                "models": 1
            },
            "classes": {
                "Collection": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/comment-report.js": {
            "name": "addon/models/comment-report.js",
            "modules": {},
            "classes": {
                "CommentReport": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/comment.js": {
            "name": "addon/models/comment.js",
            "modules": {},
            "classes": {
                "Comment": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/contributor.js": {
            "name": "addon/models/contributor.js",
            "modules": {},
            "classes": {
                "Contributor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/draft-registration.js": {
            "name": "addon/models/draft-registration.js",
            "modules": {},
            "classes": {
                "DraftRegistration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/file-provider.js": {
            "name": "addon/models/file-provider.js",
            "modules": {},
            "classes": {
                "FileProvider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/file-version.js": {
            "name": "addon/models/file-version.js",
            "modules": {},
            "classes": {
                "FileVersion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/file.js": {
            "name": "addon/models/file.js",
            "modules": {},
            "classes": {
                "File": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/institution.js": {
            "name": "addon/models/institution.js",
            "modules": {},
            "classes": {
                "Institution": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/log.js": {
            "name": "addon/models/log.js",
            "modules": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/metaschema.js": {
            "name": "addon/models/metaschema.js",
            "modules": {},
            "classes": {
                "Metaschema": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/node-link.js": {
            "name": "addon/models/node-link.js",
            "modules": {},
            "classes": {
                "NodeLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/node.js": {
            "name": "addon/models/node.js",
            "modules": {},
            "classes": {
                "Node": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/osf-model.js": {
            "name": "addon/models/osf-model.js",
            "modules": {},
            "classes": {
                "OsfModel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/registration.js": {
            "name": "addon/models/registration.js",
            "modules": {},
            "classes": {
                "Registration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/user.js": {
            "name": "addon/models/user.js",
            "modules": {},
            "classes": {
                "User": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/serializers/osf-serializer.js": {
            "name": "addon/serializers/osf-serializer.js",
            "modules": {
                "serializers": 1
            },
            "classes": {
                "OsfSerializer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/services/current-user.js": {
            "name": "addon/services/current-user.js",
            "modules": {
                "services": 1
            },
            "classes": {
                "current-user": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/services/file-manager.js": {
            "name": "addon/services/file-manager.js",
            "modules": {},
            "classes": {
                "file-manager": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ember-osf": {
            "name": "ember-osf",
            "submodules": {
                "adapters": 1,
                "authenticators": 1,
                "authorizers": 1,
                "components": 1,
                "helpers": 1,
                "mixins": 1,
                "models": 1,
                "serializers": 1,
                "services": 1
            },
            "elements": {},
            "classes": {
                "OsfAdapter": 1,
                "OsfTokenAuthenticator": 1,
                "OsfTokenAuthorizer": 1,
                "comment-detail": 1,
                "comment-form": 1,
                "comment-pane": 1,
                "dropzone-widget": 1,
                "file-browser": 1,
                "file-browser-icon": 1,
                "file-chooser component": 1,
                "file-renderer": 1,
                "file-version": 1,
                "file-widget": 1,
                "oauth-popup": 1,
                "osf-copyright": 1,
                "osf-footer": 1,
                "osf-mode-footer": 1,
                "osf-navbar": 1,
                "pagination-control": 1,
                "search-dropdown": 1,
                "sign-up": 1,
                "tags-widget": 1,
                "elem-id": 1,
                "CommentableMixin": 1,
                "FetchAllRouteMixin": 1,
                "FileCacheBypassMixin": 1,
                "FileItemMixin": 1,
                "InfinityCustomMixin": 1,
                "NodeActionsMixin": 1,
                "OsfLoginControllerMixin": 1,
                "OsfLoginRouteMixin": 1,
                "PaginatedControllerMixin": 1,
                "PaginatedRouteMixin": 1,
                "RegistrationActionsMixin": 1,
                "TaggableMixin": 1,
                "Collection": 1,
                "CommentReport": 1,
                "Comment": 1,
                "Contributor": 1,
                "DraftRegistration": 1,
                "FileProvider": 1,
                "FileVersion": 1,
                "File": 1,
                "Institution": 1,
                "Log": 1,
                "Metaschema": 1,
                "NodeLink": 1,
                "Node": 1,
                "OsfModel": 1,
                "Registration": 1,
                "User": 1,
                "OsfSerializer": 1,
                "current-user": 1,
                "file-manager": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "addon/services/file-manager.js",
            "line": 8
        },
        "adapters": {
            "name": "adapters",
            "submodules": {},
            "elements": {},
            "classes": {
                "OsfAdapter": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/adapters/osf-adapter.js",
            "line": 15,
            "description": "Base adapter class for all OSF APIv2 endpoints"
        },
        "authenticators": {
            "name": "authenticators",
            "submodules": {},
            "elements": {},
            "classes": {
                "OsfTokenAuthenticator": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/authenticators/osf-token.js",
            "line": 11,
            "description": "Ember-simple-auth compatible authenticator based on OAuth2 bearer tokens.\n\nIntended to be used with the authorizer of the same name."
        },
        "authorizers": {
            "name": "authorizers",
            "submodules": {},
            "elements": {},
            "classes": {
                "OsfTokenAuthorizer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/authorizers/osf-token.js",
            "line": 8,
            "description": "Ember-simple-auth compatible authorizer based on OAuth2 bearer tokens.\n\nIntended to be used with the authenticator of the same name."
        },
        "components": {
            "name": "components",
            "submodules": {},
            "elements": {},
            "classes": {
                "comment-detail": 1,
                "comment-form": 1,
                "comment-pane": 1,
                "dropzone-widget": 1,
                "file-browser": 1,
                "file-browser-icon": 1,
                "file-chooser component": 1,
                "file-renderer": 1,
                "file-version": 1,
                "file-widget": 1,
                "oauth-popup": 1,
                "osf-copyright": 1,
                "osf-footer": 1,
                "osf-mode-footer": 1,
                "osf-navbar": 1,
                "pagination-control": 1,
                "search-dropdown": 1,
                "sign-up": 1,
                "tags-widget": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/components/tags-widget/component.js",
            "line": 9,
            "description": "Display information about an individual comment, including controls to edit, delete, and report.\nThis component is typically used as part of the `comment-pane` component; see that component for further information.\n\nSample usage:\n```handlebars\n{{comment-detail\n  comment=comment\n  editComment=attrs.editComment\n  deleteComment=attrs.deleteComment\n  restoreComment=attrs.restoreComment\n  reportComment=attrs.reportComment}}\n```"
        },
        "helpers": {
            "name": "helpers",
            "submodules": {},
            "elements": {},
            "classes": {
                "elem-id": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/helpers/elem-id.js",
            "line": 8,
            "description": "Generate a unique HTML element ID for this element. Given \"someid\" for component instance 123, returns \"ember123-someid\"\n\nUseful to ensure unique IDs, eg for when component is reused in page."
        },
        "mixins": {
            "name": "mixins",
            "submodules": {},
            "elements": {},
            "classes": {
                "CommentableMixin": 1,
                "FetchAllRouteMixin": 1,
                "FileCacheBypassMixin": 1,
                "FileItemMixin": 1,
                "InfinityCustomMixin": 1,
                "NodeActionsMixin": 1,
                "OsfLoginControllerMixin": 1,
                "OsfLoginRouteMixin": 1,
                "PaginatedControllerMixin": 1,
                "PaginatedRouteMixin": 1,
                "RegistrationActionsMixin": 1,
                "TaggableMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/mixins/taggable-mixin.js",
            "line": 8,
            "description": "Controller mixin that implements basic commenting functionality. Uses the base model in the route model hook."
        },
        "models": {
            "name": "models",
            "submodules": {},
            "elements": {},
            "classes": {
                "Collection": 1,
                "CommentReport": 1,
                "Comment": 1,
                "Contributor": 1,
                "DraftRegistration": 1,
                "FileProvider": 1,
                "FileVersion": 1,
                "File": 1,
                "Institution": 1,
                "Log": 1,
                "Metaschema": 1,
                "NodeLink": 1,
                "Node": 1,
                "OsfModel": 1,
                "Registration": 1,
                "User": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/models/user.js",
            "line": 10,
            "description": "Model for OSF APIv2 collections\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Collection_List_GET"
        },
        "serializers": {
            "name": "serializers",
            "submodules": {},
            "elements": {},
            "classes": {
                "OsfSerializer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/serializers/osf-serializer.js",
            "line": 9,
            "description": "Base serializer class for all OSF APIv2 endpoints. Provides custom behaviors for embeds, relationships, and pagination."
        },
        "services": {
            "name": "services",
            "submodules": {},
            "elements": {},
            "classes": {
                "current-user": 1,
                "file-manager": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-osf",
            "namespace": "",
            "file": "addon/services/file-manager.js",
            "line": 8,
            "description": "Access information about the currently logged in user"
        }
    },
    "classes": {
        "OsfAdapter": {
            "name": "OsfAdapter",
            "shortname": "OsfAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "adapters",
            "namespace": "",
            "file": "addon/adapters/osf-adapter.js",
            "line": 15,
            "description": "Base adapter class for all OSF APIv2 endpoints",
            "extends": "DS.JSONAPIAdapter",
            "uses": [
                "HasManyQuery.RESTAdapterMixin",
                "DataAdapterMixin"
            ]
        },
        "OsfTokenAuthenticator": {
            "name": "OsfTokenAuthenticator",
            "shortname": "OsfTokenAuthenticator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "authenticators",
            "namespace": "",
            "file": "addon/authenticators/osf-token.js",
            "line": 11,
            "description": "Ember-simple-auth compatible authenticator based on OAuth2 bearer tokens.\n\nIntended to be used with the authorizer of the same name.",
            "extends": "ember-simple-auth/BaseAuthenticator"
        },
        "OsfTokenAuthorizer": {
            "name": "OsfTokenAuthorizer",
            "shortname": "OsfTokenAuthorizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "authorizers",
            "namespace": "",
            "file": "addon/authorizers/osf-token.js",
            "line": 8,
            "description": "Ember-simple-auth compatible authorizer based on OAuth2 bearer tokens.\n\nIntended to be used with the authenticator of the same name.",
            "extends": "ember-simple-auth/BaseAuthorizer"
        },
        "comment-detail": {
            "name": "comment-detail",
            "shortname": "comment-detail",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/comment-detail/component.js",
            "line": 9,
            "description": "Display information about an individual comment, including controls to edit, delete, and report.\nThis component is typically used as part of the `comment-pane` component; see that component for further information.\n\nSample usage:\n```handlebars\n{{comment-detail\n  comment=comment\n  editComment=attrs.editComment\n  deleteComment=attrs.deleteComment\n  restoreComment=attrs.restoreComment\n  reportComment=attrs.reportComment}}\n```",
            "params": [
                {
                    "name": "comment",
                    "description": "The comment to display",
                    "type": "DS.Model"
                },
                {
                    "name": "editComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "deleteComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "restoreComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "reportComment",
                    "description": "",
                    "type": "Action"
                }
            ]
        },
        "comment-form": {
            "name": "comment-form",
            "shortname": "comment-form",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/comment-form/component.js",
            "line": 9,
            "description": "Allow users to add comments to a page.\n\nThis component is typically used as part of the `comment-pane` component; see that component for further information.\nSample usage:\n```handlebars\n{{comment-form addComment=attrs.addComment}}\n```",
            "params": [
                {
                    "name": "addComment",
                    "description": "The action to fire when adding a new comment to the discussion. Returns a promise.",
                    "type": "Action"
                }
            ]
        },
        "comment-pane": {
            "name": "comment-pane",
            "shortname": "comment-pane",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/comment-pane/component.js",
            "line": 9,
            "description": "Display a list of comments, as well as a form to submit new comments.\nSee CommentableMixin for controller actions that can be used with this component.\n\nSample usage:\n```handlebars\n{{comment-pane\n  comments=comments\n  addComment=(action 'addComment')\n  editComment=(action 'editComment')\n  deleteComment=(action 'deleteComment')\n  restoreComment=(action 'restoreComment')\n  reportComment=(action 'reportComment')}}\n```",
            "params": [
                {
                    "name": "comments",
                    "description": "An array of comments to be displayed",
                    "type": "Comment[]"
                },
                {
                    "name": "addComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "editComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "deleteComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "restoreComment",
                    "description": "",
                    "type": "Action"
                },
                {
                    "name": "reportComment",
                    "description": "",
                    "type": "Action"
                }
            ]
        },
        "dropzone-widget": {
            "name": "dropzone-widget",
            "shortname": "dropzone-widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/dropzone-widget/component.js",
            "line": 9,
            "description": "Support file uploads via dropzone.\n\nSample usage:\n```handlebars\n{{dropzone-widget\n  preUpload=attrs.preUpload\n  buildUrl=buildUrl\n  listeners=dropzoneListeners\n  options=dropzoneOptions}}\n```"
        },
        "file-browser": {
            "name": "file-browser",
            "shortname": "file-browser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/file-browser/component.js",
            "line": 73,
            "description": "File browser widget\n\nSample usage:\n```handlebars\n{{file-browser\n rootItem=item\n openFile=(action 'openFile')\n openNode=(action 'openNode')}}\n```"
        },
        "file-browser-icon": {
            "name": "file-browser-icon",
            "shortname": "file-browser-icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/file-browser-icon/component.js",
            "line": 9,
            "description": "Display the correct file tree icon for on the item to be displayed\n\nSample usage:\n```handlebars\n{{file-browser-icon\nitem=item}}\n```"
        },
        "file-chooser component": {
            "name": "file-chooser component",
            "shortname": "file-chooser component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/file-chooser/component.js",
            "line": 9,
            "description": "This component lets the user choose a list of files from their computer, by\ndrag-and-drop, a file browser, or whatever method the developer wants.\n\nExposed to parent context (bindable attributes)\n - `files`: mutable list of chosen File objects\n - `multiple`: boolean (default `true`), when `false`, only keeps the most\n         recently chosen File in the list\n - `onChoose`: callback function called each time a file is added, with the\n         new File object as the only argument\n\nExposed to block context\n - `this`: the component object itself, so the block can invoke actions\n     example:\n     ```handlebars\n         {{#file-chooser files=fileList as |component|}}\n             {{input type='file'\n                 change=(action 'onFileInputChange' target=component)}}\n         {{/file-chooser}}\n     ```\n\nActions\n - `onFileInputChange`: handle the `change` event on a file input\n - `onChooseFile`: add a file to the chosen list\n\nStyling\n - This component's element has the `drop-zone` class\n - While the user is holding dragged files over this component, it\n   has the `drop-zone-ready` class"
        },
        "file-renderer": {
            "name": "file-renderer",
            "shortname": "file-renderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/file-renderer/component.js",
            "line": 10,
            "description": "Render the provided url in an iframe via MFR\n\nSample usage:\n```handlebars\n{{file-renderer\n  download=model.links.download\n    width=\"800\" height=\"1000\"}}\n```"
        },
        "file-version": {
            "name": "file-version",
            "shortname": "file-version",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/file-version/component.js",
            "line": 9,
            "description": "Display information about one revision of a file\n\nSample usage:\n```handlebars\n{{file-version\nversion=version\ndownload='download'}}\n```"
        },
        "file-widget": {
            "name": "file-widget",
            "shortname": "file-widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/file-widget/component.js",
            "line": 13,
            "description": "Widget to quickly upload a file to a selected project\n```handlebars\n{{file-widget\n  preUpload=(action 'preUpload')\n  buildUrl=(action 'buildUrl')\n  listeners=dropzoneOptions\n  options=dropzoneOptions}}\n```"
        },
        "oauth-popup": {
            "name": "oauth-popup",
            "shortname": "oauth-popup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/oauth-popup/component.js",
            "line": 11,
            "description": "Log a user in via OAuth2 in a popup window, without requiring a redirect\n\nSample usage:\n```handlebars\n{{#oauth-popup\n  authUrl=authUrl\n  loginSuccess=(action 'loginSuccess')\n  loginFail=(action 'loginFail') as |popup|}}\n   <button class=\"btn btn-default login-button\" onclick={{action 'login' target=popup}} >\n      Login to OSF\n   </button>\n{{/oauth-popup}}\n```"
        },
        "osf-copyright": {
            "name": "osf-copyright",
            "shortname": "osf-copyright",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/osf-copyright/component.js",
            "line": 9,
            "description": "Display copyright information as a footer"
        },
        "osf-footer": {
            "name": "osf-footer",
            "shortname": "osf-footer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/osf-footer/component.js",
            "line": 11,
            "description": "Display the OSF footer"
        },
        "osf-mode-footer": {
            "name": "osf-mode-footer",
            "shortname": "osf-mode-footer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/osf-mode-footer/component.js",
            "line": 11,
            "description": "If development mode, display a red banner in the footer"
        },
        "osf-navbar": {
            "name": "osf-navbar",
            "shortname": "osf-navbar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/osf-navbar/component.js",
            "line": 12,
            "description": "Display the OSF navbar"
        },
        "pagination-control": {
            "name": "pagination-control",
            "shortname": "pagination-control",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/pagination-control/component.js",
            "line": 9,
            "description": "Display a simple pagination control that advances the page. Intended for use with PaginatedRouteMixin."
        },
        "search-dropdown": {
            "name": "search-dropdown",
            "shortname": "search-dropdown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/search-dropdown/component.js",
            "line": 10,
            "description": "Display a search dropdown as used in the OSF navbar\n\nSample usage:\n```handlebars\n  {{#search-dropdown action='toggleSearch'}}\n```"
        },
        "sign-up": {
            "name": "sign-up",
            "shortname": "sign-up",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/sign-up/component.js",
            "line": 9,
            "description": "Display a simple signup form"
        },
        "tags-widget": {
            "name": "tags-widget",
            "shortname": "tags-widget",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "components",
            "namespace": "",
            "file": "addon/components/tags-widget/component.js",
            "line": 9,
            "description": "Allow the user to view and manage tags.\nSee TaggableMixin for controller actions that can be used with this component.\n```handlebars\n{{tags-widget\n  addATag=(action 'addATag')\n  removeATag=(action 'removeATag')\n  tags=model.tags}}\n```"
        },
        "elem-id": {
            "name": "elem-id",
            "shortname": "elem-id",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "helpers",
            "namespace": "",
            "file": "addon/helpers/elem-id.js",
            "line": 8,
            "description": "Generate a unique HTML element ID for this element. Given \"someid\" for component instance 123, returns \"ember123-someid\"\n\nUseful to ensure unique IDs, eg for when component is reused in page.",
            "params": [
                {
                    "name": "obj",
                    "description": "The instance with ID to use",
                    "type": "Ember.Object"
                },
                {
                    "name": "suffix",
                    "description": "The base attribute to name",
                    "type": "Ember.suffix"
                }
            ]
        },
        "CommentableMixin": {
            "name": "CommentableMixin",
            "shortname": "CommentableMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/commentable.js",
            "line": 8,
            "description": "Controller mixin that implements basic commenting functionality. Uses the base model in the route model hook.",
            "extends": "Ember.Mixin"
        },
        "FetchAllRouteMixin": {
            "name": "FetchAllRouteMixin",
            "shortname": "FetchAllRouteMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/fetch-all-route.js",
            "line": 9,
            "description": "The FetchAllRouteMixin supports loading *all* records from a specified model or relationship.\nEssentially, it un-paginates an API\n\nThis may be useful for select applications (such as frontend-powered search boxes), but is strongly discouraged\nfor most applications. Consider using available pagination functionality instead.",
            "access": "public",
            "tagname": "",
            "extends": "Ember.Mixin",
            "uses": [
                "InfinityCustom"
            ]
        },
        "FileCacheBypassMixin": {
            "name": "FileCacheBypassMixin",
            "shortname": "FileCacheBypassMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/file-cache-bypass.js",
            "line": 8,
            "description": "This is a hack to resolve a server-side race condition.\nAfter creating/modifying/deleting a file through Waterbutler, it can take\na fraction of a second for the API's cache to properly update, and\ntrying to reload the file model in that time can return stale data.\n\nThis adapter mixin appends a nonce to requests that are likely to run into\nthat race condition, forcing a cache miss.",
            "extends": "Ember.Mixin"
        },
        "FileItemMixin": {
            "name": "FileItemMixin",
            "shortname": "FileItemMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/file-item.js",
            "line": 8,
            "description": "File-like models are `node`, `file-provider`, and `file`/folder.\nThis mixin provides a polymorphic interface for file-like items, and is intended to be used with models.",
            "extends": "Ember.Mixin"
        },
        "InfinityCustomMixin": {
            "name": "InfinityCustomMixin",
            "shortname": "InfinityCustomMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/infinity-custom.js",
            "line": 11,
            "description": "A custom overlay on ember-infinity that supports loading infinite and paginated relationships\nFor the most part, the API and semantics are identical to ember infinity, except that the means of configuring the store find method is more flexible\n (supporting relationship queries that do not operate via store methods)",
            "extends": "Ember.Mixin",
            "uses": [
                "InfinityRoute"
            ]
        },
        "NodeActionsMixin": {
            "name": "NodeActionsMixin",
            "shortname": "NodeActionsMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/node-actions.js",
            "line": 8,
            "description": "Controller mixin that implements common actions performed on nodes.",
            "extends": "Ember.Mixin"
        },
        "OsfLoginControllerMixin": {
            "name": "OsfLoginControllerMixin",
            "shortname": "OsfLoginControllerMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/osf-login-controller.js",
            "line": 10,
            "description": "Controller mixin to add support for OAuth2 token based authentication\n\nIntended to be used in tandem with OsfLoginRouteMixin",
            "extends": "Ember.Mixin"
        },
        "OsfLoginRouteMixin": {
            "name": "OsfLoginRouteMixin",
            "shortname": "OsfLoginRouteMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/osf-login-route.js",
            "line": 13,
            "description": "Route mixin to add support for OAuth2 token based authentication",
            "extends": "Ember.Mixin"
        },
        "PaginatedControllerMixin": {
            "name": "PaginatedControllerMixin",
            "shortname": "PaginatedControllerMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/paginated-controller.js",
            "line": 8,
            "description": "Controller mixin to support fetching paginated results\n\nBecause this uses query parameters, it should be used in tandem with PaginatedRouteMixin",
            "extends": "Ember.Mixin"
        },
        "PaginatedRouteMixin": {
            "name": "PaginatedRouteMixin",
            "shortname": "PaginatedRouteMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/paginated-route.js",
            "line": 8,
            "description": "Route mixin to support fetching paginated results\n\nBecause this uses query parameters, it should be used in tandem with PaginatedControllerMixin",
            "extends": "Ember.Mixin"
        },
        "RegistrationActionsMixin": {
            "name": "RegistrationActionsMixin",
            "shortname": "RegistrationActionsMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/registration-actions.js",
            "line": 8,
            "description": "Controller mixin that implements common actions performed on registrations (and registration drafts).",
            "extends": "Ember.Mixin"
        },
        "TaggableMixin": {
            "name": "TaggableMixin",
            "shortname": "TaggableMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "mixins",
            "namespace": "",
            "file": "addon/mixins/taggable-mixin.js",
            "line": 8,
            "description": "Controller mixin that implements basic tagging functionality. Uses the model defined in the model hook.",
            "extends": "Ember.Mixin"
        },
        "Collection": {
            "name": "Collection",
            "shortname": "Collection",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/collection.js",
            "line": 10,
            "description": "Model for OSF APIv2 collections\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Collection_List_GET"
        },
        "CommentReport": {
            "name": "CommentReport",
            "shortname": "CommentReport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/comment-report.js",
            "line": 10,
            "description": "Model for OSF APIv2 comment reports. Primarily accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Comment_Reports_List_GET"
        },
        "Comment": {
            "name": "Comment",
            "shortname": "Comment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/comment.js",
            "line": 10,
            "description": "Model for OSF APIv2 comments. This model may be used with one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Comment_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Comments_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Comments_List_GET"
        },
        "Contributor": {
            "name": "Contributor",
            "shortname": "Contributor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/contributor.js",
            "line": 10,
            "description": "Model for OSF APIv2 contributors. Primarily accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Node_Contributors_List_GET"
        },
        "DraftRegistration": {
            "name": "DraftRegistration",
            "shortname": "DraftRegistration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/draft-registration.js",
            "line": 9,
            "description": "Model for OSF APIv2 draft registrations.\nThis model represents draft registration data and can be accessed as a relationship of a node.\nFor information on how to interact with a node's draft registrations, see:\n* https://api.osf.io/v2/docs/#!/v2/Node_Draft_Registrations_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Draft_Registration_Detail_GET"
        },
        "FileProvider": {
            "name": "FileProvider",
            "shortname": "FileProvider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/file-provider.js",
            "line": 11,
            "description": "Model for OSF APIv2 file providers. Primarily used in relationship fields.\nThis model is used for basic file provider metadata. To interact with file contents directly, see the `file-manager` service.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Node_Providers_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Provider_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Providers_List_GET"
        },
        "FileVersion": {
            "name": "FileVersion",
            "shortname": "FileVersion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/file-version.js",
            "line": 10,
            "description": "Model for OSF APIv2 file versions. Primarily used in relationship fields.\nThis model is used for basic file version metadata. To interact with file contents directly, see the `file-manager` service.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/File_Versions_List_GET\n* https://api.osf.io/v2/docs/#!/v2/File_Version_Detail_GET"
        },
        "File": {
            "name": "File",
            "shortname": "File",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/file.js",
            "line": 11,
            "description": "Model for OSF APIv2 files. This model may be used with one of several API endpoints. It may be queried directly,\n or (more commonly) accessed via relationship fields.\nThis model is used for basic file metadata. To interact with file contents directly, see the `file-manager` service.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/File_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Files_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_File_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Files_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_File_Detail_GET"
        },
        "Institution": {
            "name": "Institution",
            "shortname": "Institution",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/institution.js",
            "line": 10,
            "description": "Model for OSF APIv2 institutions. This model may be used with one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Institution_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Institution_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Institutions_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Institutions_List_GET\n* https://api.osf.io/v2/docs/#!/v2/User_Institutions_GET"
        },
        "Log": {
            "name": "Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/log.js",
            "line": 10,
            "description": "Model for OSF APIv2 log entries. This model may be used with one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Node_Log_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Log_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Log_List_GET"
        },
        "Metaschema": {
            "name": "Metaschema",
            "shortname": "Metaschema",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/metaschema.js",
            "line": 10,
            "description": "Model for OSF APIv2 metaschemas.\nThis model describes metaschemas and can be directly queried.\nFor information on how to retrieve metaschemas see:\n* https://api.osf.io/v2/docs/#!/v2/Meta_Schemas_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Meta_Schema_Detail_GET"
        },
        "NodeLink": {
            "name": "NodeLink",
            "shortname": "NodeLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/node-link.js",
            "line": 10,
            "description": "Model for OSF APIv2 node links. This model may refer to one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Node_Links_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Links_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Node_Links_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Node_Links_Detail_GET"
        },
        "Node": {
            "name": "Node",
            "shortname": "Node",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/node.js",
            "line": 12,
            "description": "Model for OSF APIv2 nodes. This model may be used with one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Node_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Children_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Linked_Nodes_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Node_Forks_List_GET\n* https://api.osf.io/v2/docs/#!/v2/User_Nodes_GET"
        },
        "OsfModel": {
            "name": "OsfModel",
            "shortname": "OsfModel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/osf-model.js",
            "line": 11,
            "description": "Common properties and behaviors shared by all OSF APIv2 models",
            "access": "public",
            "tagname": ""
        },
        "Registration": {
            "name": "Registration",
            "shortname": "Registration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/registration.js",
            "line": 10,
            "description": "Model for OSF APIv2 registrations. This model may be used with one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/Registration_List_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Registration_Children_List_GET\n* https://api.osf.io/v2/docs/#!/v2/User_Registrations_GET"
        },
        "User": {
            "name": "User",
            "shortname": "User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "models",
            "namespace": "",
            "file": "addon/models/user.js",
            "line": 10,
            "description": "Model for OSF APIv2 users. This model may be used with one of several API endpoints. It may be queried directly,\n or accessed via relationship fields.\nFor field and usage information, see:\n* https://api.osf.io/v2/docs/#!/v2/User_List_GET\n* https://api.osf.io/v2/docs/#!/v2/User_Detail_GET\n* https://api.osf.io/v2/docs/#!/v2/Institution_User_List_GET"
        },
        "OsfSerializer": {
            "name": "OsfSerializer",
            "shortname": "OsfSerializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "serializers",
            "namespace": "",
            "file": "addon/serializers/osf-serializer.js",
            "line": 9,
            "description": "Base serializer class for all OSF APIv2 endpoints. Provides custom behaviors for embeds, relationships, and pagination.",
            "extends": "DS.JSONAPISerializer"
        },
        "current-user": {
            "name": "current-user",
            "shortname": "current-user",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "services",
            "namespace": "",
            "file": "addon/services/current-user.js",
            "line": 8,
            "description": "Access information about the currently logged in user",
            "extends": "Ember.Service"
        },
        "file-manager": {
            "name": "file-manager",
            "shortname": "file-manager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-osf",
            "submodule": "services",
            "namespace": "",
            "file": "addon/services/file-manager.js",
            "line": 8,
            "description": "An Ember service for doing things to files.\nEssentially a wrapper for the Waterbutler API.\nhttp://waterbutler.readthedocs.io/",
            "extends": "Ember.Service"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 45,
            "description": "Construct a URL for a relationship create/update/delete.",
            "itemtype": "method",
            "name": "_buildRelationshipURL",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "snapshot",
                    "description": "",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "relationship",
                    "description": "the relationship to build a url for",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a URL",
                "type": "String"
            },
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 63,
            "description": "Handle creation of related resources",
            "itemtype": "method",
            "name": "_createRelated",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "snapshot",
                    "description": "snapshot of inverse record",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "createdSnapshots",
                    "description": "",
                    "type": "DS.Snapshot[]"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "isBulk",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 90,
            "description": "Handle add(s) of related resources. This differs from CREATEs in that the related\nrecord is already saved and is just being associated with the inverse record.",
            "itemtype": "method",
            "name": "_addRelated",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "snapshot",
                    "description": "snapshot of inverse record",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "addedSnapshots",
                    "description": "",
                    "type": "DS.Snapshot[]"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "isBulk",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 111,
            "description": "Handle update(s) of related resources",
            "itemtype": "method",
            "name": "_updateRelated",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "snapshot",
                    "description": "snapshot of inverse record",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "updatedSnapshots",
                    "description": "",
                    "type": "DS.Snapshot[]"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "isBulk",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 133,
            "description": "Handle removal of related resources. This differs from DELETEs in that the related\nrecord is not deleted, just dissociated from the inverse record.",
            "itemtype": "method",
            "name": "_removeRelated",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "snapshot",
                    "description": "snapshot of inverse record",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "removedSnapshots",
                    "description": "",
                    "type": "DS.Snapshot[]"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "isBulk",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 152,
            "description": "Handle deletion of related resources",
            "itemtype": "method",
            "name": "_deleteRelated",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "snapshot",
                    "description": "snapshot of inverse record",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "deletedSnapshots",
                    "description": "",
                    "type": "DS.Snapshot[]"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "isBulk",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 173,
            "description": "A helper for making _*Related requests",
            "itemtype": "method",
            "name": "_doRelatedRequest",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "snapshot",
                    "description": "snapshot of inverse record",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "relatedSnapshots",
                    "description": "",
                    "type": "DS.Snapshot[]"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "requestMethod",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "isBulk",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/adapters/osf-adapter.js",
            "line": 230,
            "description": "Delegate a series of requests based on a snapshot, relationship, and a change.\nThe change argument can be 'delete', 'remove', 'update', 'add', 'create'",
            "itemtype": "method",
            "name": "_handleRelatedRequest",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "store",
                    "description": "",
                    "type": "DS.Store"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "DS.Model"
                },
                {
                    "name": "snapshot",
                    "description": "",
                    "type": "DS.Snapshot"
                },
                {
                    "name": "relationship",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "change",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "OsfAdapter",
            "module": "ember-osf",
            "submodule": "adapters"
        },
        {
            "file": "addon/components/comment-form/component.js",
            "line": 26,
            "description": "Call a passed-in closure action to handle submitting a comment. Reset the form if save succeeds.",
            "itemtype": "method",
            "name": "addComment",
            "params": [
                {
                    "name": "text",
                    "description": "The text of the comment to create",
                    "type": "String"
                }
            ],
            "class": "comment-form",
            "module": "ember-osf",
            "submodule": "components"
        },
        {
            "file": "addon/mixins/commentable.js",
            "line": 15,
            "description": "The list of comments associated with a model. Defaults to using the model hook, and ensures that new comments\nare shown first (to match API convention)",
            "access": "public",
            "tagname": "",
            "itemtype": "property",
            "name": "comments",
            "type": "Comment[]",
            "class": "CommentableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/commentable.js",
            "line": 32,
            "description": "Action that adds a new comment targeting the model by GUID.",
            "itemtype": "method",
            "name": "addComment",
            "params": [
                {
                    "name": "text",
                    "description": "The text of the new comment",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "CommentableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/commentable.js",
            "line": 51,
            "description": "Action that edits an existing comment.",
            "itemtype": "method",
            "name": "editComment",
            "params": [
                {
                    "name": "comment",
                    "description": "A comment model",
                    "type": "DS.Model"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "CommentableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/commentable.js",
            "line": 60,
            "description": "Action that handles deletion of an existing comment.",
            "itemtype": "method",
            "name": "deleteComment",
            "params": [
                {
                    "name": "comment",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "CommentableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/commentable.js",
            "line": 70,
            "description": "Action that restores a deleted comment.",
            "itemtype": "method",
            "name": "restoreComment",
            "params": [
                {
                    "name": "comment",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "CommentableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/commentable.js",
            "line": 80,
            "description": "Action that reports a comment for administrative review",
            "itemtype": "method",
            "name": "reportComment",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "CommentableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 22,
            "description": "The name of the URL parameter used by the API to control number of results per page",
            "itemtype": "property",
            "name": "perPageParam",
            "type": "String",
            "default": "page[size]",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 28,
            "description": "The name of the URL parameter used by the API to control the page requested",
            "itemtype": "property",
            "name": "pageParam",
            "type": "String",
            "default": "page",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 34,
            "description": "The name of the payload field that specifies how many pages are to be loaded. For OSF APIv2, this calculated field is added by serializer.",
            "itemtype": "property",
            "name": "totalPagesParam",
            "type": "String",
            "default": "meta.total",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 42,
            "description": "If a string is provided, will set infinite fetch on the relationship with the specified name,\nfrom the model specified in the route's model hook",
            "itemtype": "property",
            "name": "relationshipToFetch",
            "type": "String",
            "default": "null",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 52,
            "description": "Relationship querying reloads the relationship, so it can not be used as an in-place storage for the de-paginated list of records\nAs an ugly workaround, provide a new storage place that will not reflect mutations or updates to the list",
            "itemtype": "property",
            "name": "allRelated",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 60,
            "description": "Sets up fetch-all query for a relationship field.",
            "access": "public",
            "tagname": "",
            "itemtype": "method",
            "name": "setupRelationshipFetch",
            "params": [
                {
                    "name": "controller",
                    "description": ""
                },
                {
                    "name": "model",
                    "description": ""
                }
            ],
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 90,
            "description": "Event listener that fetches more results automatically\nAs written, this does not handle fetch errors, and will not retry once an error is encountered",
            "itemtype": "method",
            "name": "infinityModelUpdated",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 100,
            "description": "Model queries pass unchanged, but relationship queries require custom transformations to work with Ember-infinity\n\nember-data-has-many-query returns a DS.ManyArray, but Ember-infinity will not work unless given an ArrayProxy instance (with .content)",
            "itemtype": "method",
            "name": "afterInfinityModel",
            "params": [
                {
                    "name": "infinityModelPromiseResult",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/fetch-all-route.js",
            "line": 123,
            "description": "Convenience action for clickable buttons, mainly for use with debugging",
            "itemtype": "method",
            "name": "getMore",
            "class": "FetchAllRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/infinity-custom.js",
            "line": 21,
            "description": "Repurpose an ember-infinity hook to override the method used for queries",
            "itemtype": "property",
            "name": "_storeFindMethod",
            "type": "{function}",
            "default": "this.store.query",
            "class": "InfinityCustomMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/infinity-custom.js",
            "line": 29,
            "description": "Use the infinityModel method in the place of `this.store.find('model')` to\ninitialize the Infinity Model for your route.",
            "itemtype": "method",
            "name": "infinityModel",
            "params": [
                {
                    "name": "modelName",
                    "description": "The name of the model.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Optional, the perPage and startingPage to load from.",
                    "type": "Object"
                },
                {
                    "name": "boundParams",
                    "description": "Optional, any route properties to be included as additional params.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "InfinityCustomMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/infinity-custom.js",
            "line": 73,
            "description": "request the next page from the adapter",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_requestNextPage",
            "return": {
                "description": "A Promise that resolves the next page of objects",
                "type": "Promise"
            },
            "class": "InfinityCustomMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 14,
            "description": "The node to perform these actions on. If not specified, defaults to the model hook.",
            "itemtype": "property",
            "name": "node",
            "type": "DS.Model",
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 22,
            "description": "Helper method that maps all node contributors to format {contribId: Contributor}",
            "itemtype": "method",
            "name": "_generateContributorMap",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "contributors",
                    "description": "A list of contributors to be included in the map",
                    "type": "Contributor[]"
                }
            ],
            "return": {
                "description": "Returns a contributor map of the id to the contributor record",
                "type": "Object"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 35,
            "description": "Helper method that affiliates an institution with a node.",
            "itemtype": "method",
            "name": "_affiliateNode",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "node",
                    "description": "Node record",
                    "type": "DS.Model"
                },
                {
                    "name": "institution",
                    "description": "Institution record",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node with the newly created institution relationship",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 49,
            "description": "Update a node",
            "itemtype": "method",
            "name": "updateNode",
            "params": [
                {
                    "name": "title",
                    "description": "New title of the node",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "New Description of the node",
                    "type": "String"
                },
                {
                    "name": "category",
                    "description": "New node category",
                    "type": "String"
                },
                {
                    "name": "isPublic",
                    "description": "Should this node be publicly-visible?",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 75,
            "description": "Delete a node",
            "itemtype": "method",
            "name": "deleteNode",
            "return": {
                "description": "Returns a promise that resolves after the deletion of the node.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 85,
            "description": "Affiliate a node with an institution",
            "itemtype": "method",
            "name": "affiliateNode",
            "params": [
                {
                    "name": "institutionId",
                    "description": "ID of the institutution to be affiliated",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node\nwith the newly affiliated institution relationship",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 98,
            "description": "Unaffiliate a node with an institution",
            "itemtype": "method",
            "name": "unaffiliateNode",
            "params": [
                {
                    "name": "institution",
                    "description": "Institution relationship to be removed from node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node\nwith the affiliated institution relationship removed.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 111,
            "description": "Add a contributor to a node",
            "itemtype": "method",
            "name": "addContributor",
            "params": [
                {
                    "name": "userId",
                    "description": "ID of user that will be a contributor on the node",
                    "type": "String"
                },
                {
                    "name": "permission",
                    "description": "User permission level. One of \"read\", \"write\", or \"admin\". Default: \"write\".",
                    "type": "String"
                },
                {
                    "name": "isBibliographic",
                    "description": "Whether user will be included in citations for the node. \"default: true\"",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node\nwith the new contributor relationship.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 131,
            "description": "Remove a contributor from a node",
            "itemtype": "method",
            "name": "removeContributor",
            "params": [
                {
                    "name": "contributor",
                    "description": "Contributor relationship that will be removed from node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that will resolve upon contributor deletion.\nUser itself will not be removed.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 146,
            "description": "Update contributors of a node. Makes a bulk request to the APIv2.",
            "itemtype": "method",
            "name": "updateContributors",
            "params": [
                {
                    "name": "contributors",
                    "description": "Contributor relationships on the node.",
                    "type": "Contributor[]"
                },
                {
                    "name": "permissionsChanges",
                    "description": "Dictionary mapping contributor ids to desired permissions.",
                    "type": "Object"
                },
                {
                    "name": "bibliographicChanges",
                    "description": "Dictionary mapping contributor ids to desired bibliographic statuses",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node\nwith edited contributor relationships.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 167,
            "description": "Add a child (component) to a node.",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "title",
                    "description": "Title for the child",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "Description for the child",
                    "type": "String"
                },
                {
                    "name": "category",
                    "description": "Category for the child",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node with the new child relationship.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 186,
            "description": "Add a node link (pointer) to another node",
            "itemtype": "method",
            "name": "addNodeLink",
            "params": [
                {
                    "name": "targetNodeId",
                    "description": "ID of the node for which you wish to create a pointer",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node with the\nnewly added nodeLink relationship",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/node-actions.js",
            "line": 202,
            "description": "Remove a node link (pointer) to another node",
            "itemtype": "method",
            "name": "removeNodeLink",
            "params": [
                {
                    "name": "nodeLink",
                    "description": "nodeLink record to be destroyed.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves after the node link has been removed.  This does not delete\nthe target node itself.",
                "type": "Promise"
            },
            "class": "NodeActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/paginated-route.js",
            "line": 27,
            "description": "Allow configuration of the backend URL parameter used for page #",
            "itemtype": "property",
            "name": "pageParam",
            "type": "String",
            "default": "\"page\"",
            "class": "PaginatedRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/paginated-route.js",
            "line": 35,
            "description": "Allow configuration of the backend URL parameter for number of results per page",
            "itemtype": "property",
            "name": "perPageParam",
            "type": "String",
            "default": "\"page[size]\"",
            "class": "PaginatedRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/paginated-route.js",
            "line": 43,
            "description": "Fetch a route-specified page of results from an external API\n\nTo use this argument, pass the params from the model hook as the first argument.\n```javascript\nmodel(routeParams) {\n  return this.queryForPage('user', routeParams);\n}\n```",
            "itemtype": "method",
            "name": "queryForPage",
            "params": [
                {
                    "name": "modelName",
                    "description": "The name of the model to query in the store"
                },
                {
                    "name": "routeParams",
                    "description": "Parameters dictionary available to the model hook; must be passed in manually"
                },
                {
                    "name": "userParams",
                    "description": "Additional user-specified query parameters to further customize the query"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "PaginatedRouteMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 14,
            "description": "TODO: Document this parameter",
            "itemtype": "property",
            "name": "node",
            "type": "DS.Model",
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 20,
            "description": "The draft to perform these actions on. If not specified, defaults to the model hook.",
            "itemtype": "property",
            "name": "draft",
            "type": "DS.Model",
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 28,
            "description": "Update the current registration metadata with new responses. Takes the\ncurrentMetadata and recursively merges in the newMetadata.",
            "itemtype": "method",
            "name": "_updateMetadata",
            "params": [
                {
                    "name": "currentMetadata",
                    "description": "The registration metadata at last save.",
                    "type": "Object"
                },
                {
                    "name": "newMetadata",
                    "description": "New registration metadata.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns merge of currentMetadata and newMetadata",
                "type": "Object"
            },
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 51,
            "description": "Build the request payload used when creating a registration from a draft.",
            "itemtype": "method",
            "name": "_generateRegistrationPayload",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "draft",
                    "description": "ID of the draft registration",
                    "type": "String"
                },
                {
                    "name": "registrationChoice",
                    "description": "Either \"immediate\" or \"embargo\".",
                    "type": "String"
                },
                {
                    "name": "liftEmbargo",
                    "description": "if registrationChoice === \"embargo\", liftEmbargo should be the date to lift the embargo.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Returns the attributes portion of the payload for creating a registration.",
                "type": "Object"
            },
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 72,
            "description": "Create a draft registration of the node.",
            "itemtype": "method",
            "name": "createDraft",
            "params": [
                {
                    "name": "schemaId",
                    "description": "ID of the chosen registration schema",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node - with the\nnewly created draft registration.",
                "type": "Promise"
            },
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 88,
            "description": "Delete a draft registration of the node.",
            "itemtype": "method",
            "name": "deleteDraft",
            "params": [
                {
                    "name": "draft",
                    "description": "Draft to be deleted",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves after the deletion of the draft.",
                "type": "Promise"
            },
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 98,
            "description": "Edit a draft registration of the node",
            "itemtype": "method",
            "name": "editDraft",
            "params": [
                {
                    "name": "updatedMetadata",
                    "description": "Responses to questions in the registration\nschema, nested in the format the registration schema expects\nto questions in the registration schema",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated draft",
                "type": "Promise"
            },
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/registration-actions.js",
            "line": 114,
            "description": "Register a draft (creates a registration from a draft)",
            "itemtype": "method",
            "name": "registerDraft",
            "params": [
                {
                    "name": "updatedMetadata",
                    "description": "esponses to questions in the registration\nschema, nested in the format the registration schema expects",
                    "type": "Object"
                },
                {
                    "name": "registrationChoice",
                    "description": "Either \"immediate\" or \"embargo\".",
                    "type": "String"
                },
                {
                    "name": "liftEmbargo",
                    "description": "if registrationChoice === \"embargo\", liftEmbargo should be the date to lift the embargo.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Returns a promise that resolves to the updated node with the newly created registration relationship",
                "type": "Promise"
            },
            "class": "RegistrationActionsMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/taggable-mixin.js",
            "line": 15,
            "description": "Appends a tag to the current array of tags on the resource.  Copies current\nlist of tags, appends new tag to copy, and then sets tags on the resource\nas the modified copy.",
            "itemtype": "method",
            "name": "addATag",
            "params": [
                {
                    "name": "tag",
                    "description": "New tag to be added to list.",
                    "type": "String"
                }
            ],
            "class": "TaggableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/mixins/taggable-mixin.js",
            "line": 31,
            "description": "Removes a tag from the current array of tags on the resource.",
            "itemtype": "method",
            "name": "removeATag",
            "params": [
                {
                    "name": "tag",
                    "description": "Tag to be removed from list.",
                    "type": "String"
                }
            ],
            "class": "TaggableMixin",
            "module": "ember-osf",
            "submodule": "mixins"
        },
        {
            "file": "addon/models/osf-model.js",
            "line": 30,
            "description": "Looks up relationship on model and returns hasManyRelationship\nor belongsToRelationship object.",
            "itemtype": "method",
            "name": "resolveRelationship",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "rel",
                    "description": "Name of the relationship on the model",
                    "type": "String"
                }
            ],
            "class": "OsfModel",
            "module": "ember-osf",
            "submodule": "models"
        },
        {
            "file": "addon/serializers/osf-serializer.js",
            "line": 24,
            "description": "Extract information about records embedded inside this request",
            "itemtype": "method",
            "name": "_extractEmbeds",
            "params": [
                {
                    "name": "resourceHash",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "OsfSerializer",
            "module": "ember-osf",
            "submodule": "serializers"
        },
        {
            "file": "addon/services/current-user.js",
            "line": 17,
            "description": "If logged in, return the ID of the current user, else return null.",
            "itemtype": "property",
            "name": "currentUserId",
            "type": "{String|null}",
            "class": "current-user",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/current-user.js",
            "line": 31,
            "description": "Fetch information about the currently logged in user. If no user is logged in, this method returns a rejected promise.",
            "itemtype": "method",
            "name": "load",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "current-user",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 20,
            "description": "Get a URL to download the given file.",
            "itemtype": "method",
            "name": "getDownloadUrl",
            "params": [
                {
                    "name": "file",
                    "description": "A `file` model",
                    "type": "File"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the URL.",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "version",
                                    "description": "`file-version` ID",
                                    "type": "Object",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "Download URL",
                "type": "String"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 48,
            "description": "Download the contents of the given file.",
            "itemtype": "method",
            "name": "getContents",
            "params": [
                {
                    "name": "file",
                    "description": "A `file` model with `isFolder == false`.",
                    "type": "File"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the file contents or rejects\nwith an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 65,
            "description": "Upload a new version of an existing file.",
            "itemtype": "method",
            "name": "updateContents",
            "params": [
                {
                    "name": "file",
                    "description": "A `file` model with `isFolder == false`.",
                    "type": "File"
                },
                {
                    "name": "contents",
                    "description": "A native `File` object or another appropriate\npayload for uploading.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the updated `file` model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 91,
            "description": "Check out a file, so only the current user can modify it.",
            "itemtype": "method",
            "name": "checkOut",
            "params": [
                {
                    "name": "file",
                    "description": "`file` model with `isFolder == false`.",
                    "type": "File"
                }
            ],
            "return": {
                "description": "Promise that resolves on success or rejects with an\nerror message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 110,
            "description": "Check in a file, so anyone with permission can modify it.",
            "itemtype": "method",
            "name": "checkOut",
            "params": [
                {
                    "name": "file",
                    "description": "`file` model with `isFolder == false`.",
                    "type": "File"
                }
            ],
            "return": {
                "description": "Promise that resolves on success or rejects with an\nerror message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 128,
            "description": "Create a new folder",
            "itemtype": "method",
            "name": "addSubfolder",
            "params": [
                {
                    "name": "folder",
                    "description": "Location of the new folder, a `file` model with\n`isFolder == true`.",
                    "type": "File"
                },
                {
                    "name": "name",
                    "description": "Name of the folder to create.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the new folder's model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 159,
            "description": "Upload a file",
            "itemtype": "method",
            "name": "uploadFile",
            "params": [
                {
                    "name": "folder",
                    "description": "Location of the new file, a `file` model with\n`isFolder == true`.",
                    "type": "File"
                },
                {
                    "name": "name",
                    "description": "Name of the new file.",
                    "type": "String"
                },
                {
                    "name": "contents",
                    "description": "A native `File` object or another appropriate\npayload for uploading.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the new file's model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 188,
            "description": "Rename a file or folder",
            "itemtype": "method",
            "name": "rename",
            "params": [
                {
                    "name": "file",
                    "description": "`file` model to rename.",
                    "type": "File"
                },
                {
                    "name": "newName",
                    "description": "New name for the file.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the updated `file` model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 209,
            "description": "Move (or copy) a file or folder",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "file",
                    "description": "`file` model to move.",
                    "type": "File"
                },
                {
                    "name": "targetFolder",
                    "description": "Where to move the file, a `file` model with\n`isFolder == true`.",
                    "type": "File"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "rename",
                                    "description": "If specified, also rename the file\nto the given name.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "resource",
                                    "description": "Optional node ID. If specified,\nmove the file to that node.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "provider",
                                    "description": "Optional provider name. If\nspecified, move the file to that provider.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "action",
                                    "description": "Either 'move' or 'copy'.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "'move'"
                                },
                                {
                                    "name": "conflict",
                                    "description": "Specifies what to do if\na file of the same name already exists in the target folder. If 'keep',\nrename this file to avoid conflict. If replace, the existing file is\ndestroyed.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "'replace'"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the the updated (or newly\ncreated) `file` model or rejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 250,
            "description": "Copy a file or folder.\nConvenience method for `move` with `options.copy == true`.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "file",
                    "description": "`file` model to copy.",
                    "type": "File"
                },
                {
                    "name": "targetFolder",
                    "description": "Where to copy the file, a `file` model with\n`isFolder == true`.",
                    "type": "File"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "rename",
                                    "description": "If specified, also rename the file\nto the given name.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "resource",
                                    "description": "Optional node ID. If specified,\nmove the file to that node.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "provider",
                                    "description": "Optional provider name. If\nspecified, move the file to that provider.",
                                    "type": "String",
                                    "optional": true
                                },
                                {
                                    "name": "conflict",
                                    "description": "Specifies what to do if\na file of the same name already exists in the target folder. If 'keep',\nrename this file to avoid conflict. If replace, the existing file is\ndestroyed.",
                                    "type": "String",
                                    "optional": true,
                                    "optdefault": "'replace'"
                                }
                            ]
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the the new `file` model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 283,
            "description": "Delete a file or folder",
            "itemtype": "method",
            "name": "deleteFile",
            "params": [
                {
                    "name": "file",
                    "description": "`file` model to delete.",
                    "type": "File"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves on success or rejects with an\nerror message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 309,
            "description": "Check whether the given url corresponds to a model that is currently\nreloading after a file operation.\n\nUsed by `mixin:file-cache-bypass` to avoid a race condition where the\ncache might return stale, inaccurate data.",
            "itemtype": "method",
            "name": "isReloadingUrl",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`true` if `url` corresponds to a pending reload on a\nmodel immediately after a Waterbutler action, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 325,
            "description": "Hash set of URLs for `model.reload()` calls that are still pending.",
            "itemtype": "property",
            "name": "_reloadingUrls",
            "access": "private",
            "tagname": "",
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 333,
            "description": "Force-reload a model from the API.",
            "itemtype": "method",
            "name": "_reloadModel",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "model",
                    "description": "`file` model or a `files` relationship",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise that resolves to the reloaded model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 367,
            "description": "Make a Waterbutler request",
            "itemtype": "method",
            "name": "_waterbutlerRequest",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method for the request.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "Waterbutler URL.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options hash",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "query",
                            "description": "Key-value hash of query parameters to\nadd to the request URL.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "data",
                            "description": "Payload to be sent.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Promise that resolves to the data returned from the\nserver on success, or rejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        },
        {
            "file": "addon/services/file-manager.js",
            "line": 404,
            "description": "Get the `file` model for a newly created file.",
            "itemtype": "method",
            "name": "_getNewFileInfo",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "parentFolder",
                    "description": "Model for the new file's parent folder.",
                    "type": "File"
                },
                {
                    "name": "name",
                    "description": "Name of the new file.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Promise that resolves to the new file's model or\nrejects with an error message.",
                "type": "Promise"
            },
            "class": "file-manager",
            "module": "ember-osf",
            "submodule": "services"
        }
    ],
    "warnings": []
}